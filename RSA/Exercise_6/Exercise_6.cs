/*
 –ó–∞–¥–∞–Ω–∏–µ 6 - RSA
 –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –≤—ã—á–∏—Å–ª—è—é—â—É—é –∑–Ω–∞—á–µ–Ω–∏–µ ùúë(ùëö), –≥–¥–µ
ùúë(ùëö) ‚àí—Ñ—É–Ω–∫—Ü–∏—è –≠–π–ª–µ—Ä–∞ (–ø–æ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—é)
 */

public static class DZ2_Exercise_6
{
    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã—á–∏—Å–ª–µ–Ω–∏—è –Ω–∞–∏–±–æ–ª—å—à–µ–≥–æ –æ–±—â–µ–≥–æ –¥–µ–ª–∏—Ç–µ–ª—è (–ù–û–î) –¥–≤—É—Ö —á–∏—Å–µ–ª
    private static int GCD(int a, int b)
    {
        if (b == 0)
            return a;
        
        return GCD(b, a % b);
    }

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã—á–∏—Å–ª–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–∏ –≠–π–ª–µ—Ä–∞ (—Ñ—É–Ω–∫—Ü–∏–∏ ùúë)
    private static int EulerPhiCalc(int m)
    {
        int result = 1;

        for (int i = 2; i < m; i++)
        {
            if (GCD(i, m) == 1)
                result++;
        }

        return result;
    }


    public static void Main()
    {
        Console.WriteLine("–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ:");
        string numberString = Console.ReadLine();
        int number = Convert.ToInt32(numberString);
        int phiCalculate = EulerPhiCalc(number);
        Console.WriteLine("EulerPhi({0}) = {1}", number, phiCalculate);

    }
    
}