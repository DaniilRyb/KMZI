/*
 –ó–∞–¥–∞–Ω–∏–µ 6 - RSA
 –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –≤—ã—á–∏—Å–ª—è—é—â—É—é –∑–Ω–∞—á–µ–Ω–∏–µ ùúë(ùëö), –≥–¥–µ
ùúë(ùëö) ‚àí—Ñ—É–Ω–∫—Ü–∏—è –≠–π–ª–µ—Ä–∞ (–ø–æ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—é)
 */

public static class DZ2_Exercise_6
{
    
    private static int EulerPhiCalculate(int m)
    {
        int result = m; // –ò–∑–Ω–∞—á–∞–ª—å–Ω–æ –ø—Ä–∏—Å–≤–∞–∏–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É –∑–Ω–∞—á–µ–Ω–∏–µ m

        // –ò—Ç–µ—Ä–∞—Ç–∏–≤–Ω–æ –Ω–∞—Ö–æ–¥–∏–º –≤—Å–µ –ø—Ä–æ—Å—Ç—ã–µ —á–∏—Å–ª–∞ p, –∫–æ—Ç–æ—Ä—ã–µ –¥–µ–ª—è—Ç m,
        // –∏ –≤—ã—á–∏—Ç–∞–µ–º –∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –∑–Ω–∞—á–µ–Ω–∏–µ result / p
        // –¥–æ —Ç–µ—Ö –ø–æ—Ä, –ø–æ–∫–∞ m –Ω–µ —Å—Ç–∞–Ω–µ—Ç —Ä–∞–≤–Ω–æ 1
        
        for (int p = 2; p * p <= m; p++)
        {
            if (m % p == 0) // –ï—Å–ª–∏ p —è–≤–ª—è–µ—Ç—Å—è –¥–µ–ª–∏—Ç–µ–ª–µ–º m
            {
                while (m % p == 0)
                    m /= p; // –î–µ–ª–∏–º m –Ω–∞ p, –ø–æ–∫–∞ –æ–Ω–æ –¥–µ–ª–∏—Ç—Å—è –Ω–∞ p

                result -= result / p; // –í—ã—á–∏—Ç–∞–µ–º result / p –∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
            }
        }

        // –ï—Å–ª–∏ m > 1, —Ç–æ m —è–≤–ª—è–µ—Ç—Å—è –ø—Ä–æ—Å—Ç—ã–º —á–∏—Å–ª–æ–º, –∏ –º—ã –≤—ã—á–∏—Ç–∞–µ–º
        // result / m –∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
        if (m > 1)
            result -= result / m;

        return result;
    }
    public static void Main()
    {
        Console.WriteLine("–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ:");
        string numberString = Console.ReadLine();
        int number = Convert.ToInt32(numberString);
        int phiCalculate = EulerPhiCalculate(number);
        Console.WriteLine("EulerPhi({0}) = {1}", number, phiCalculate);

    }
    
}